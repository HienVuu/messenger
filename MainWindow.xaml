<Window x:Class="WpfChatApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfChatApp"
        mc:Ignorable="d"
        Title="Modern WPF Chat" Height="600" Width="450"
        WindowStartupLocation="CenterScreen"
        Background="#FFE5E5E5"
        Closing="Window_Closing">

	<Window.Resources>
		<SolidColorBrush x:Key="MyMessageBrush" Color="#FF007AFF"/>
		<SolidColorBrush x:Key="TheirMessageBrush" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="SendButtonBrush" Color="#FF007AFF"/>
		<SolidColorBrush x:Key="ServerButtonBrush" Color="#FF34C759"/>
		<SolidColorBrush x:Key="ClientButtonBrush" Color="#FF007AFF"/>
		<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFE5E5E5"/>

		<Style x:Key="AccentButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Padding" Value="10,5"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="15">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Opacity" Value="0.8"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="MessageTemplate" DataType="{x:Type local:ChatMessage}">
			<Border x:Name="MessageBorder" CornerRadius="15" Padding="10" Margin="5" MaxWidth="300">
				<StackPanel>
					<TextBlock Text="{Binding Content}" TextWrapping="Wrap" Foreground="Black"/>
					<TextBlock Text="{Binding SentTime, StringFormat='{}{0:HH:mm}'}"
                               FontSize="10" Foreground="Gray" HorizontalAlignment="Right"/>
				</StackPanel>
			</Border>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding IsSentByMe}" Value="True">
					<Setter TargetName="MessageBorder" Property="Background" Value="{StaticResource MyMessageBrush}" />
					<Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right" />
					<Setter Property="TextBlock.Foreground" Value="White" />
				</DataTrigger>
				<DataTrigger Binding="{Binding IsSentByMe}" Value="False">
					<Setter TargetName="MessageBorder" Property="Background" Value="{StaticResource TheirMessageBrush}" />
					<Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Left" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
	</Window.Resources>

	<Grid>
		<Grid Margin="10">
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<ScrollViewer Grid.Row="0" x:Name="MessagesScrollViewer" VerticalScrollBarVisibility="Auto">
				<ItemsControl x:Name="MessagesItemsControl" ItemTemplate="{StaticResource MessageTemplate}" />
			</ScrollViewer>

			<Border Grid.Row="1" CornerRadius="15" Background="White" Padding="5" Margin="0,10,0,0">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<TextBox Grid.Column="0" x:Name="MessageTextBox" BorderThickness="0" VerticalContentAlignment="Center" Margin="5,0"
                             KeyDown="MessageTextBox_KeyDown" TextChanged="MessageTextBox_TextChanged"
                             Text="Type a message..."/>
					<Button Grid.Column="1" x:Name="SendButton" Width="40" Height="40" BorderThickness="0" IsEnabled="False" Click="SendButton_Click">
						<Button.Style>
							<Style TargetType="Button">
								<Setter Property="Background" Value="Transparent"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="Button">
											<Border Background="{TemplateBinding Background}" CornerRadius="20">
												<Path Data="M1,21 L23,12 L1,3 L1,10 L17,12 L1,14 L1,21 Z" Fill="{StaticResource SendButtonBrush}" Stretch="Uniform" Width="20" Height="20"/>
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Path.Fill" Value="LightGray"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
				</Grid>
			</Border>
		</Grid>

		<Grid x:Name="ConnectionPanel" Background="{StaticResource WindowBackgroundBrush}">
			<Border Background="White" CornerRadius="20" Padding="30" Margin="30" VerticalAlignment="Center" HorizontalAlignment="Center">
				<Border.Effect>
					<DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.1" BlurRadius="15"/>
				</Border.Effect>
				<StackPanel>
					<TextBlock Text="Welcome to Chat!" FontSize="24" FontWeight="Bold" HorizontalAlignment="Center"/>
					<TextBlock Text="Connect with your friend" FontSize="14" Foreground="Gray" HorizontalAlignment="Center" Margin="0,0,0,20"/>

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Label Grid.Column="0" Content="IP Address:" FontWeight="Medium"/>
						<TextBox Grid.Column="1" x:Name="IpAddressTextBox" Text="127.0.0.1" VerticalContentAlignment="Center"/>
						<Label Grid.Column="2" Content="Port:" Margin="10,0,0,0" FontWeight="Medium"/>
						<TextBox Grid.Column="3" x:Name="PortTextBox" Text="8888" Width="50" VerticalContentAlignment="Center"/>
					</Grid>
					<StackPanel Orientation="Horizontal" Margin="0,20,0,0" HorizontalAlignment="Center">
						<Button x:Name="StartServerButton" Content="Start Server" Width="120" Height="40"
                                Style="{StaticResource AccentButtonStyle}" Background="{StaticResource ServerButtonBrush}"
                                Click="StartServerButton_Click"/>
						<Button x:Name="ConnectClientButton" Content="Connect to Server" Width="140" Height="40" Margin="10,0,0,0"
                                Style="{StaticResource AccentButtonStyle}" Background="{StaticResource ClientButtonBrush}"
                                Click="ConnectClientButton_Click"/>
					</StackPanel>
				</StackPanel>
			</Border>
		</Grid>

		<Grid x:Name="WaitingOverlay" Background="#AA000000" Visibility="Collapsed">
			<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
				<Border Width="60" Height="60" CornerRadius="30" BorderThickness="4" BorderBrush="Transparent">
					<Border.Background>
						<SolidColorBrush Color="Transparent"/>
					</Border.Background>
					<Path x:Name="Spinner" Data="M30,0 A30,30 0 0 1 5,15" Stroke="White" StrokeThickness="5" RenderTransformOrigin="0.5,0.5">
						<Path.RenderTransform>
							<RotateTransform Angle="0" />
						</Path.RenderTransform>
					</Path>
					<Border.Triggers>
						<EventTrigger RoutedEvent="Loaded">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="Spinner" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                     From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</Border.Triggers>
				</Border>
				<TextBlock x:Name="WaitingInfoText" Text="Waiting for connection..." FontSize="18" Foreground="White" Margin="0,20,0,0" TextAlignment="Center"/>
			</StackPanel>
		</Grid>
	</Grid>
</Window>